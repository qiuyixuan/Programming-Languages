% Here is an initial encoding for you to test your rules on (it's the example
% from the handout).
%
% You are welcome to define additional test cases.
true_constant(1).
false_constant(2).
disjunction(3,1,2).
true_constant(4).
conjunction(5,3,4).
negation(6,1).
negation(7,2).

%% BEGIN ANSWER
% Define your rules here.
% We will only grade your code between the "BEGIN ANSWER" and "END ANSWER" comments.

% Here's a first rule to get you started! Add the rest of them...

eval(L, true) :- true_constant(L).

eval(L, false) :- false_constant(L).

eval(L, true) :- conjunction(L, L1, L2), eval(L1, true), eval(L2, true).
eval(L, false) :- conjunction(L, L1, L2), eval(L1, false).
eval(L, false) :- conjunction(L, L1, L2), eval(L2, false).

eval(L, true) :- disjunction(L, L1, L2), eval(L1, true).
eval(L, true) :- disjunction(L, L1, L2), eval(L2, true).
eval(L, false) :- disjunction(L, L1, L2), eval(L1, false), eval(L2, false).

eval(L, true) :- negation(L, L1), eval(L1, false).
eval(L, false) :- negation(L, L1), eval(L1, true).

%% END ANSWER


